{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h1\", null, _toDisplayString(_ctx.msg), 1 /* TEXT */), _cache[0] || (_cache[0] = _createElementVNode(\"label\", null, [_createElementVNode(\"p\", null, [_createTextVNode(\" Digite um Nome Fantasia, Razao Social, Regiao de Comercializacao, Modalidade, Cidade, UF ou Bairro para realizar a busca. \"), _createElementVNode(\"br\"), _createTextVNode(\" Ou deixe em branco para listar todas as operadoras. \")]), _createElementVNode(\"input\", {\n    type: \"text\"\n  })], -1 /* HOISTED */)), _cache[1] || (_cache[1] = _createElementVNode(\"button\", null, \" Buscar \", -1 /* HOISTED */))]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_toDisplayString","_ctx","msg","_createTextVNode","type"],"sources":["C:\\Desenv\\JS\\front-vue\\src\\components\\Operadoras.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>{{ msg }}</h1>\n    <label>\n      <p>\n        Digite um\n        Nome Fantasia,\n        Razao Social,\n        Regiao de Comercializacao,\n        Modalidade,\n        Cidade,\n        UF ou\n        Bairro\n        para realizar a busca.\n        <br />\n        Ou deixe em branco para listar todas as operadoras.\n      </p>\n      <input type=\"text\" />\n    </label>\n    <button> Buscar </button>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'FiltroOperadoras',\n  props: {\n    msg: String\n  }\n  data() {\n    return {\n      termoBusca: '',\n      resultados: [],\n      colunas: [],\n      erro: ''\n    }\n  },\n  methods: {\n    async buscar() {\n      this.resultados = []\n      this.colunas = []\n      this.erro = ''\n\n      try {\n        const res = await fetch(`http://localhost:5000/operadoras?busca=${encodeURIComponent(this.termoBusca)}`)\n        if (!res.ok) throw new Error('Erro na requisição')\n\n        const json = await res.json()\n        this.resultados = json\n        if (json.length > 0) {\n          this.colunas = Object.keys(json[0])\n        }\n      } catch (e) {\n        this.erro = 'Erro ao buscar operadoras. verifique se o servidor está rodando.'\n        console.error(e)\n      }\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\n\na {\n  color: #42b983;\n}\n\ninput {\n  width: 510px;\n}\n</style>\n"],"mappings":";;uBACEA,mBAAA,CAmBM,cAlBJC,mBAAA,CAAkB,YAAAC,gBAAA,CAAXC,IAAA,CAAAC,GAAG,kB,0BACVH,mBAAA,CAeQ,gBAdNA,mBAAA,CAYI,YAhBVI,gBAAA,CAIS,6HAUD,GAAAJ,mBAAA,CAAM,OAddI,gBAAA,CAcc,uDAER,E,GACAJ,mBAAA,CAAqB;IAAdK,IAAI,EAAC;EAAM,G,gDAEpBL,mBAAA,CAAyB,gBAAjB,UAAQ,qB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}